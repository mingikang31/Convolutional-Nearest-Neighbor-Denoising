training: False
_parameters: {}
_buffers: {}
_non_persistent_buffers_set: set()
_backward_pre_hooks: OrderedDict()
_backward_hooks: OrderedDict()
_is_full_backward_hook: None
_forward_hooks: OrderedDict()
_forward_hooks_with_kwargs: OrderedDict()
_forward_hooks_always_called: OrderedDict()
_forward_pre_hooks: OrderedDict()
_forward_pre_hooks_with_kwargs: OrderedDict()
_state_dict_hooks: OrderedDict()
_state_dict_pre_hooks: OrderedDict()
_load_state_dict_pre_hooks: OrderedDict()
_load_state_dict_post_hooks: OrderedDict()
_modules: {'down_sample_layers': ModuleList(
  (0): ConvBlock(
    (layers): Sequential(
      (0): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(3, 32, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(32, 30, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): Dropout2d(p=0.1, inplace=False)
      (4): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(32, 32, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(32, 30, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): Dropout2d(p=0.1, inplace=False)
    )
  )
  (1): ConvBlock(
    (layers): Sequential(
      (0): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(32, 64, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(64, 62, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): Dropout2d(p=0.1, inplace=False)
      (4): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(64, 64, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(64, 62, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): Dropout2d(p=0.1, inplace=False)
    )
  )
  (2): ConvBlock(
    (layers): Sequential(
      (0): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(64, 128, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(128, 126, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): Dropout2d(p=0.1, inplace=False)
      (4): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(128, 128, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(128, 126, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): Dropout2d(p=0.1, inplace=False)
    )
  )
  (3): ConvBlock(
    (layers): Sequential(
      (0): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(128, 256, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(256, 254, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): Dropout2d(p=0.1, inplace=False)
      (4): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(256, 256, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(256, 254, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): Dropout2d(p=0.1, inplace=False)
    )
  )
), 'conv': ConvBlock(
  (layers): Sequential(
    (0): Conv2d_NN(
      (shuffle_layer): PixelShuffle(upscale_factor=2)
      (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
      (conv1d_layer): Conv1d(256, 512, kernel_size=(9,), stride=(9,))
      (flatten): Flatten(start_dim=2, end_dim=-1)
      (pointwise_conv): Conv2d(512, 510, kernel_size=(1, 1), stride=(1, 1))
    )
    (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (2): LeakyReLU(negative_slope=0.2, inplace=True)
    (3): Dropout2d(p=0.1, inplace=False)
    (4): Conv2d_NN(
      (shuffle_layer): PixelShuffle(upscale_factor=2)
      (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
      (conv1d_layer): Conv1d(512, 512, kernel_size=(9,), stride=(9,))
      (flatten): Flatten(start_dim=2, end_dim=-1)
      (pointwise_conv): Conv2d(512, 510, kernel_size=(1, 1), stride=(1, 1))
    )
    (5): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
    (6): LeakyReLU(negative_slope=0.2, inplace=True)
    (7): Dropout2d(p=0.1, inplace=False)
  )
), 'up_conv': ModuleList(
  (0): ConvBlock(
    (layers): Sequential(
      (0): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(512, 256, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(256, 254, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): Dropout2d(p=0.1, inplace=False)
      (4): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(256, 256, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(256, 254, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): Dropout2d(p=0.1, inplace=False)
    )
  )
  (1): ConvBlock(
    (layers): Sequential(
      (0): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(256, 128, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(128, 126, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): Dropout2d(p=0.1, inplace=False)
      (4): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(128, 128, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(128, 126, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): Dropout2d(p=0.1, inplace=False)
    )
  )
  (2): ConvBlock(
    (layers): Sequential(
      (0): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(128, 64, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(64, 62, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): Dropout2d(p=0.1, inplace=False)
      (4): Conv2d_NN(
        (shuffle_layer): PixelShuffle(upscale_factor=2)
        (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
        (conv1d_layer): Conv1d(64, 64, kernel_size=(9,), stride=(9,))
        (flatten): Flatten(start_dim=2, end_dim=-1)
        (pointwise_conv): Conv2d(64, 62, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): Dropout2d(p=0.1, inplace=False)
    )
  )
  (3): Sequential(
    (0): ConvBlock(
      (layers): Sequential(
        (0): Conv2d_NN(
          (shuffle_layer): PixelShuffle(upscale_factor=2)
          (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
          (conv1d_layer): Conv1d(64, 32, kernel_size=(9,), stride=(9,))
          (flatten): Flatten(start_dim=2, end_dim=-1)
          (pointwise_conv): Conv2d(32, 30, kernel_size=(1, 1), stride=(1, 1))
        )
        (1): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
        (3): Dropout2d(p=0.1, inplace=False)
        (4): Conv2d_NN(
          (shuffle_layer): PixelShuffle(upscale_factor=2)
          (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
          (conv1d_layer): Conv1d(32, 32, kernel_size=(9,), stride=(9,))
          (flatten): Flatten(start_dim=2, end_dim=-1)
          (pointwise_conv): Conv2d(32, 30, kernel_size=(1, 1), stride=(1, 1))
        )
        (5): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (6): LeakyReLU(negative_slope=0.2, inplace=True)
        (7): Dropout2d(p=0.1, inplace=False)
      )
    )
    (1): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
), 'up_transpose_conv': ModuleList(
  (0): TransposeConvBlock(
    (layers): Sequential(
      (0): ConvTranspose2d(512, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
      (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
    )
  )
  (1): TransposeConvBlock(
    (layers): Sequential(
      (0): ConvTranspose2d(256, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
      (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
    )
  )
  (2): TransposeConvBlock(
    (layers): Sequential(
      (0): ConvTranspose2d(128, 64, kernel_size=(2, 2), stride=(2, 2), bias=False)
      (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
    )
  )
  (3): TransposeConvBlock(
    (layers): Sequential(
      (0): ConvTranspose2d(64, 32, kernel_size=(2, 2), stride=(2, 2), bias=False)
      (1): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
    )
  )
)}
args: Namespace(layer='ConvNN', chans=32, num_pool_layers=4, drop_prob=0.1, K=9, kernel_size=3, sampling_type='random', num_samples=64, sample_padding=0, shuffle_pattern='NA', shuffle_scale=2, magnitude_type='similarity', coordinate_encoding=False, num_heads=4, attention_dropout=0.1, dataset='cbsd68', data_path='./Data/CBSD68', noise_std=0.2, batch_size=64, num_epochs=100, use_amp=False, clip_grad_norm=None, optimizer='adam', momentum=0.9, weight_decay=1e-06, lr=0.001, lr_step=20, lr_gamma=0.1, scheduler='step', device='cuda', seed=0, output_dir='./Output/Aug_25_31/CBSD68/UNet/ConvNN_Random_K9_N64', img_size=torch.Size([3, 128, 128]), total_params=8629151, trainable_params=8629151)
in_chans: 3
out_chans: 3
chans: 32
num_pool_layers: 4
drop_prob: 0.1
name: UNet ConvNN
