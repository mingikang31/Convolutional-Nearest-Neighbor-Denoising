training: False
_parameters: {}
_buffers: {}
_non_persistent_buffers_set: set()
_backward_pre_hooks: OrderedDict()
_backward_hooks: OrderedDict()
_is_full_backward_hook: None
_forward_hooks: OrderedDict()
_forward_hooks_with_kwargs: OrderedDict()
_forward_hooks_always_called: OrderedDict()
_forward_pre_hooks: OrderedDict()
_forward_pre_hooks_with_kwargs: OrderedDict()
_state_dict_hooks: OrderedDict()
_state_dict_pre_hooks: OrderedDict()
_load_state_dict_pre_hooks: OrderedDict()
_load_state_dict_post_hooks: OrderedDict()
_modules: {'features': Sequential(
  (0): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
  (1): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(1, 64, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (pointwise_conv): Conv2d(64, 62, kernel_size=(1, 1), stride=(1, 1))
  )
  (2): ReLU(inplace=True)
  (3): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
  (4): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(64, 32, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (pointwise_conv): Conv2d(32, 30, kernel_size=(1, 1), stride=(1, 1))
  )
  (5): ReLU(inplace=True)
  (6): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
  (7): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(32, 16, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (pointwise_conv): Conv2d(16, 14, kernel_size=(1, 1), stride=(1, 1))
  )
  (8): ReLU(inplace=True)
  (9): InstanceNorm2d(8, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
  (10): Conv2d_NN(
    (shuffle_layer): PixelShuffle(upscale_factor=2)
    (unshuffle_layer): PixelUnshuffle(downscale_factor=2)
    (conv1d_layer): Conv1d(16, 8, kernel_size=(9,), stride=(9,))
    (flatten): Flatten(start_dim=2, end_dim=-1)
    (pointwise_conv): Conv2d(8, 6, kernel_size=(1, 1), stride=(1, 1))
  )
  (11): ReLU(inplace=True)
), 'output': Conv2d(8, 1, kernel_size=(1, 1), stride=(1, 1))}
args: Namespace(layer='ConvNN', num_layers=4, channels=[64, 32, 16, 8], K=9, kernel_size=3, sampling_type='spatial', num_samples=8, sample_padding=0, shuffle_pattern='NA', shuffle_scale=2, magnitude_type='similarity', coordinate_encoding=False, num_heads=4, attention_dropout=0.1, dataset='bsd68', data_path='./Data/BSD68', noise_std=0.2, batch_size=64, num_epochs=100, use_amp=False, clip_grad_norm=None, optimizer='adam', momentum=0.9, weight_decay=1e-06, lr=0.001, lr_step=20, lr_gamma=0.1, scheduler='step', device='cuda', seed=0, output_dir='./Output/Aug_25_31/BSD68/ACM/ConvNN_Spatial_K9_N8', img_size=torch.Size([1, 128, 128]), total_params=30209, trainable_params=30209)
model: All Convolutional Network
name: All Convolutional Network ConvNN
